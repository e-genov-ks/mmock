{{- $ingress := .Values.ingress.ui -}}
{{- if .Values.ingress.ui.enabled -}}
{{- $fullName := include "mmock.fullname" . -}}
{{- $apiV1 := false -}}
{{- $apiVersion := "extensions/v1beta1" -}}
{{- if and (.Capabilities.APIVersions.Has "networking.k8s.io/v1") (semverCompare ">= v1.19.0-0" .Capabilities.KubeVersion.Version) -}}
  {{- $apiVersion = "networking.k8s.io/v1" -}}
  {{- $apiV1 = true -}}
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" -}}
  {{- $apiVersion = "networking.k8s.io/v1beta1" -}}
{{- else -}}
  {{- $apiVersion = "extensions/v1beta1" -}}
{{- end }}
apiVersion: {{ $apiVersion }}
kind: Ingress
metadata:
  name: {{ $fullName }}-ui
  labels:
    {{- include "mmock.labels" . | nindent 4 }}
  {{- with .Values.ingress.ui.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if $ingress.ingressClassName }}
  ingressClassName: {{ $ingress.ingressClassName }}
{{- end }}
{{- if $ingress.tls }}
  tls:
    {{- range $ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ tpl . $ | quote }}
      {{- end }}
      {{- with .secretName }}
      secretName: {{ tpl . $ }}
      {{- end }}
  {{- end }}
{{- end }}
  rules:
    {{- range .Values.ingress.ui.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ tpl .path $ | quote }}
            {{- if $apiV1 }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: 8082
              {{- else }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: 8082
            {{- end }}
        {{- end }}
   {{- end }}
{{- end }}
